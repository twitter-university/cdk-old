[[Android_Debugging]]

Debugging Android Apps
======================

image::images/Debugging-Splash.png[align="center", height="50%"]


Objectives of Android Debugging
-------------------------------
This module provides an overview of some of the tools available in Android SDK that can help you with debugging your apps. By the end of this module you should have a general knowledge of what is available and how to use it.

The tools we'll explore include:

* Logcat
* Debugger
* Traceview
* HierarchyViewer

LogCat
------
.LogCat
image::images/ADT-LogCat.png[align="right"]

The universal, most versatile way to track what is going on in your app.

Can be viewed via command line or Eclipse.

Logs can be generated both from SDK Java code, or low-level C code via Bionic libc extension.

Debugger
--------
.Debugger
image::images/Debugger.png[align="center"]

Your standard debugger is included in SDK, with all the usual bells & whistles. 


Traceview
---------
.Traceview
image::images/Traceview.png[align="center"]

Traceview helps you profile you application and find bottlenecks. It shows execution of various calls through the entire stack. You can zoom into specific calls.


HierarchyViewer
---------------
.HierarchyViewer
image::images/HierarchyViewer.png[align="right"]

Hierarchy Viewer helps you analyze your User Interface. 

Base UI tends to be the most “expensive” part of your application, this tool is very useful.

Quiz
----

. What is the global logging framework in Android?
. What criteria can you filter the logs for?
. How do you debug Android apps?
. What is the tool for profiling the execution of your code?
. How do you profile your UI?


Summary of Android Debugging
----------------------------

In this module, you learned about some of the SDK tools, such as Logcat, Debugger, Traceview, and HierarchyViewer. You should be able to identify which one to use in what situation.